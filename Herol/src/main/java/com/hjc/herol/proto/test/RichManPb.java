// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: RichMan.proto

package com.hjc.herol.proto.test;

public final class RichManPb {
  private RichManPb() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }
  public interface RichManOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.hjc.herol.proto.test.RichMan)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>optional int32 cmd = 1;</code>
     */
    int getCmd();

    /**
     * <code>optional int32 id = 2;</code>
     */
    int getId();

    /**
     * <code>optional string name = 3;</code>
     */
    java.lang.String getName();
    /**
     * <code>optional string name = 3;</code>
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <code>optional string email = 4;</code>
     */
    java.lang.String getEmail();
    /**
     * <code>optional string email = 4;</code>
     */
    com.google.protobuf.ByteString
        getEmailBytes();

    /**
     * <code>repeated .com.hjc.herol.proto.test.RichMan.Car cars = 5;</code>
     */
    java.util.List<com.hjc.herol.proto.test.RichManPb.RichMan.Car> 
        getCarsList();
    /**
     * <code>repeated .com.hjc.herol.proto.test.RichMan.Car cars = 5;</code>
     */
    com.hjc.herol.proto.test.RichManPb.RichMan.Car getCars(int index);
    /**
     * <code>repeated .com.hjc.herol.proto.test.RichMan.Car cars = 5;</code>
     */
    int getCarsCount();
  }
  /**
   * Protobuf type {@code com.hjc.herol.proto.test.RichMan}
   */
  public  static final class RichMan extends
      com.google.protobuf.GeneratedMessageLite<
          RichMan, RichMan.Builder> implements
      // @@protoc_insertion_point(message_implements:com.hjc.herol.proto.test.RichMan)
      RichManOrBuilder {
    private RichMan() {
      name_ = "";
      email_ = "";
      cars_ = emptyProtobufList();
    }
    /**
     * Protobuf enum {@code com.hjc.herol.proto.test.RichMan.CarType}
     */
    public enum CarType
        implements com.google.protobuf.Internal.EnumLite {
      /**
       * <code>AUDI = 0;</code>
       */
      AUDI(0),
      /**
       * <code>BENZ = 1;</code>
       */
      BENZ(1),
      /**
       * <code>LAMBORGHINI = 2;</code>
       */
      LAMBORGHINI(2),
      /**
       * <code>DASAUTO = 3;</code>
       */
      DASAUTO(3),
      UNRECOGNIZED(-1),
      ;

      /**
       * <code>AUDI = 0;</code>
       */
      public static final int AUDI_VALUE = 0;
      /**
       * <code>BENZ = 1;</code>
       */
      public static final int BENZ_VALUE = 1;
      /**
       * <code>LAMBORGHINI = 2;</code>
       */
      public static final int LAMBORGHINI_VALUE = 2;
      /**
       * <code>DASAUTO = 3;</code>
       */
      public static final int DASAUTO_VALUE = 3;


      public final int getNumber() {
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static CarType valueOf(int value) {
        return forNumber(value);
      }

      public static CarType forNumber(int value) {
        switch (value) {
          case 0: return AUDI;
          case 1: return BENZ;
          case 2: return LAMBORGHINI;
          case 3: return DASAUTO;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<CarType>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          CarType> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<CarType>() {
              public CarType findValueByNumber(int number) {
                return CarType.forNumber(number);
              }
            };

      private final int value;

      private CarType(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:com.hjc.herol.proto.test.RichMan.CarType)
    }

    public interface CarOrBuilder extends
        // @@protoc_insertion_point(interface_extends:com.hjc.herol.proto.test.RichMan.Car)
        com.google.protobuf.MessageLiteOrBuilder {

      /**
       * <code>optional string name = 1;</code>
       */
      java.lang.String getName();
      /**
       * <code>optional string name = 1;</code>
       */
      com.google.protobuf.ByteString
          getNameBytes();

      /**
       * <code>optional .com.hjc.herol.proto.test.RichMan.CarType type = 2;</code>
       */
      int getTypeValue();
      /**
       * <code>optional .com.hjc.herol.proto.test.RichMan.CarType type = 2;</code>
       */
      com.hjc.herol.proto.test.RichManPb.RichMan.CarType getType();
    }
    /**
     * Protobuf type {@code com.hjc.herol.proto.test.RichMan.Car}
     */
    public  static final class Car extends
        com.google.protobuf.GeneratedMessageLite<
            Car, Car.Builder> implements
        // @@protoc_insertion_point(message_implements:com.hjc.herol.proto.test.RichMan.Car)
        CarOrBuilder {
      private Car() {
        name_ = "";
      }
      public static final int NAME_FIELD_NUMBER = 1;
      private java.lang.String name_;
      /**
       * <code>optional string name = 1;</code>
       */
      public java.lang.String getName() {
        return name_;
      }
      /**
       * <code>optional string name = 1;</code>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        return com.google.protobuf.ByteString.copyFromUtf8(name_);
      }
      /**
       * <code>optional string name = 1;</code>
       */
      private void setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        name_ = value;
      }
      /**
       * <code>optional string name = 1;</code>
       */
      private void clearName() {
        
        name_ = getDefaultInstance().getName();
      }
      /**
       * <code>optional string name = 1;</code>
       */
      private void setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        name_ = value.toStringUtf8();
      }

      public static final int TYPE_FIELD_NUMBER = 2;
      private int type_;
      /**
       * <code>optional .com.hjc.herol.proto.test.RichMan.CarType type = 2;</code>
       */
      public int getTypeValue() {
        return type_;
      }
      /**
       * <code>optional .com.hjc.herol.proto.test.RichMan.CarType type = 2;</code>
       */
      public com.hjc.herol.proto.test.RichManPb.RichMan.CarType getType() {
        com.hjc.herol.proto.test.RichManPb.RichMan.CarType result = com.hjc.herol.proto.test.RichManPb.RichMan.CarType.forNumber(type_);
        return result == null ? com.hjc.herol.proto.test.RichManPb.RichMan.CarType.UNRECOGNIZED : result;
      }
      /**
       * <code>optional .com.hjc.herol.proto.test.RichMan.CarType type = 2;</code>
       */
      private void setTypeValue(int value) {
          type_ = value;
      }
      /**
       * <code>optional .com.hjc.herol.proto.test.RichMan.CarType type = 2;</code>
       */
      private void setType(com.hjc.herol.proto.test.RichManPb.RichMan.CarType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        type_ = value.getNumber();
      }
      /**
       * <code>optional .com.hjc.herol.proto.test.RichMan.CarType type = 2;</code>
       */
      private void clearType() {
        
        type_ = 0;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (!name_.isEmpty()) {
          output.writeString(1, getName());
        }
        if (type_ != com.hjc.herol.proto.test.RichManPb.RichMan.CarType.AUDI.getNumber()) {
          output.writeEnum(2, type_);
        }
      }

      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (!name_.isEmpty()) {
          size += com.google.protobuf.CodedOutputStream
            .computeStringSize(1, getName());
        }
        if (type_ != com.hjc.herol.proto.test.RichManPb.RichMan.CarType.AUDI.getNumber()) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(2, type_);
        }
        memoizedSerializedSize = size;
        return size;
      }

      public static com.hjc.herol.proto.test.RichManPb.RichMan.Car parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data);
      }
      public static com.hjc.herol.proto.test.RichManPb.RichMan.Car parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data, extensionRegistry);
      }
      public static com.hjc.herol.proto.test.RichManPb.RichMan.Car parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data);
      }
      public static com.hjc.herol.proto.test.RichManPb.RichMan.Car parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data, extensionRegistry);
      }
      public static com.hjc.herol.proto.test.RichManPb.RichMan.Car parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input);
      }
      public static com.hjc.herol.proto.test.RichManPb.RichMan.Car parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input, extensionRegistry);
      }
      public static com.hjc.herol.proto.test.RichManPb.RichMan.Car parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return parseDelimitedFrom(DEFAULT_INSTANCE, input);
      }
      public static com.hjc.herol.proto.test.RichManPb.RichMan.Car parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
      }
      public static com.hjc.herol.proto.test.RichManPb.RichMan.Car parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input);
      }
      public static com.hjc.herol.proto.test.RichManPb.RichMan.Car parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input, extensionRegistry);
      }

      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(com.hjc.herol.proto.test.RichManPb.RichMan.Car prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }

      /**
       * Protobuf type {@code com.hjc.herol.proto.test.RichMan.Car}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageLite.Builder<
            com.hjc.herol.proto.test.RichManPb.RichMan.Car, Builder> implements
          // @@protoc_insertion_point(builder_implements:com.hjc.herol.proto.test.RichMan.Car)
          com.hjc.herol.proto.test.RichManPb.RichMan.CarOrBuilder {
        // Construct using com.hjc.herol.proto.test.RichManPb.RichMan.Car.newBuilder()
        private Builder() {
          super(DEFAULT_INSTANCE);
        }


        /**
         * <code>optional string name = 1;</code>
         */
        public java.lang.String getName() {
          return instance.getName();
        }
        /**
         * <code>optional string name = 1;</code>
         */
        public com.google.protobuf.ByteString
            getNameBytes() {
          return instance.getNameBytes();
        }
        /**
         * <code>optional string name = 1;</code>
         */
        public Builder setName(
            java.lang.String value) {
          copyOnWrite();
          instance.setName(value);
          return this;
        }
        /**
         * <code>optional string name = 1;</code>
         */
        public Builder clearName() {
          copyOnWrite();
          instance.clearName();
          return this;
        }
        /**
         * <code>optional string name = 1;</code>
         */
        public Builder setNameBytes(
            com.google.protobuf.ByteString value) {
          copyOnWrite();
          instance.setNameBytes(value);
          return this;
        }

        /**
         * <code>optional .com.hjc.herol.proto.test.RichMan.CarType type = 2;</code>
         */
        public int getTypeValue() {
          return instance.getTypeValue();
        }
        /**
         * <code>optional .com.hjc.herol.proto.test.RichMan.CarType type = 2;</code>
         */
        public Builder setTypeValue(int value) {
          copyOnWrite();
          instance.setTypeValue(value);
          return this;
        }
        /**
         * <code>optional .com.hjc.herol.proto.test.RichMan.CarType type = 2;</code>
         */
        public com.hjc.herol.proto.test.RichManPb.RichMan.CarType getType() {
          return instance.getType();
        }
        /**
         * <code>optional .com.hjc.herol.proto.test.RichMan.CarType type = 2;</code>
         */
        public Builder setType(com.hjc.herol.proto.test.RichManPb.RichMan.CarType value) {
          copyOnWrite();
          instance.setType(value);
          return this;
        }
        /**
         * <code>optional .com.hjc.herol.proto.test.RichMan.CarType type = 2;</code>
         */
        public Builder clearType() {
          copyOnWrite();
          instance.clearType();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:com.hjc.herol.proto.test.RichMan.Car)
      }
      protected final Object dynamicMethod(
          com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
          Object arg0, Object arg1) {
        switch (method) {
          case NEW_MUTABLE_INSTANCE: {
            return new com.hjc.herol.proto.test.RichManPb.RichMan.Car();
          }
          case IS_INITIALIZED: {
            return DEFAULT_INSTANCE;
          }
          case MAKE_IMMUTABLE: {
            return null;
          }
          case NEW_BUILDER: {
            return new Builder();
          }
          case VISIT: {
            Visitor visitor = (Visitor) arg0;
            com.hjc.herol.proto.test.RichManPb.RichMan.Car other = (com.hjc.herol.proto.test.RichManPb.RichMan.Car) arg1;
            name_ = visitor.visitString(!name_.isEmpty(), name_,
                !other.name_.isEmpty(), other.name_);
            type_ = visitor.visitInt(type_ != 0, type_,    other.type_ != 0, other.type_);
            if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
                .INSTANCE) {
            }
            return this;
          }
          case MERGE_FROM_STREAM: {
            com.google.protobuf.CodedInputStream input =
                (com.google.protobuf.CodedInputStream) arg0;
            com.google.protobuf.ExtensionRegistryLite extensionRegistry =
                (com.google.protobuf.ExtensionRegistryLite) arg1;
            try {
              boolean done = false;
              while (!done) {
                int tag = input.readTag();
                switch (tag) {
                  case 0:
                    done = true;
                    break;
                  default: {
                    if (!input.skipField(tag)) {
                      done = true;
                    }
                    break;
                  }
                  case 10: {
                    String s = input.readStringRequireUtf8();

                    name_ = s;
                    break;
                  }
                  case 16: {
                    int rawValue = input.readEnum();

                    type_ = rawValue;
                    break;
                  }
                }
              }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              throw new RuntimeException(e.setUnfinishedMessage(this));
            } catch (java.io.IOException e) {
              throw new RuntimeException(
                  new com.google.protobuf.InvalidProtocolBufferException(
                      e.getMessage()).setUnfinishedMessage(this));
            } finally {
            }
          }
          case GET_DEFAULT_INSTANCE: {
            return DEFAULT_INSTANCE;
          }
          case GET_PARSER: {
            if (PARSER == null) {    synchronized (com.hjc.herol.proto.test.RichManPb.RichMan.Car.class) {
                if (PARSER == null) {
                  PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                }
              }
            }
            return PARSER;
          }
        }
        throw new UnsupportedOperationException();
      }


      // @@protoc_insertion_point(class_scope:com.hjc.herol.proto.test.RichMan.Car)
      private static final com.hjc.herol.proto.test.RichManPb.RichMan.Car DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new Car();
        DEFAULT_INSTANCE.makeImmutable();
      }

      public static com.hjc.herol.proto.test.RichManPb.RichMan.Car getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static volatile com.google.protobuf.Parser<Car> PARSER;

      public static com.google.protobuf.Parser<Car> parser() {
        return DEFAULT_INSTANCE.getParserForType();
      }
    }

    private int bitField0_;
    public static final int CMD_FIELD_NUMBER = 1;
    private int cmd_;
    /**
     * <code>optional int32 cmd = 1;</code>
     */
    public int getCmd() {
      return cmd_;
    }
    /**
     * <code>optional int32 cmd = 1;</code>
     */
    private void setCmd(int value) {
      
      cmd_ = value;
    }
    /**
     * <code>optional int32 cmd = 1;</code>
     */
    private void clearCmd() {
      
      cmd_ = 0;
    }

    public static final int ID_FIELD_NUMBER = 2;
    private int id_;
    /**
     * <code>optional int32 id = 2;</code>
     */
    public int getId() {
      return id_;
    }
    /**
     * <code>optional int32 id = 2;</code>
     */
    private void setId(int value) {
      
      id_ = value;
    }
    /**
     * <code>optional int32 id = 2;</code>
     */
    private void clearId() {
      
      id_ = 0;
    }

    public static final int NAME_FIELD_NUMBER = 3;
    private java.lang.String name_;
    /**
     * <code>optional string name = 3;</code>
     */
    public java.lang.String getName() {
      return name_;
    }
    /**
     * <code>optional string name = 3;</code>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(name_);
    }
    /**
     * <code>optional string name = 3;</code>
     */
    private void setName(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      name_ = value;
    }
    /**
     * <code>optional string name = 3;</code>
     */
    private void clearName() {
      
      name_ = getDefaultInstance().getName();
    }
    /**
     * <code>optional string name = 3;</code>
     */
    private void setNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      name_ = value.toStringUtf8();
    }

    public static final int EMAIL_FIELD_NUMBER = 4;
    private java.lang.String email_;
    /**
     * <code>optional string email = 4;</code>
     */
    public java.lang.String getEmail() {
      return email_;
    }
    /**
     * <code>optional string email = 4;</code>
     */
    public com.google.protobuf.ByteString
        getEmailBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(email_);
    }
    /**
     * <code>optional string email = 4;</code>
     */
    private void setEmail(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      email_ = value;
    }
    /**
     * <code>optional string email = 4;</code>
     */
    private void clearEmail() {
      
      email_ = getDefaultInstance().getEmail();
    }
    /**
     * <code>optional string email = 4;</code>
     */
    private void setEmailBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      email_ = value.toStringUtf8();
    }

    public static final int CARS_FIELD_NUMBER = 5;
    private com.google.protobuf.Internal.ProtobufList<com.hjc.herol.proto.test.RichManPb.RichMan.Car> cars_;
    /**
     * <code>repeated .com.hjc.herol.proto.test.RichMan.Car cars = 5;</code>
     */
    public java.util.List<com.hjc.herol.proto.test.RichManPb.RichMan.Car> getCarsList() {
      return cars_;
    }
    /**
     * <code>repeated .com.hjc.herol.proto.test.RichMan.Car cars = 5;</code>
     */
    public java.util.List<? extends com.hjc.herol.proto.test.RichManPb.RichMan.CarOrBuilder> 
        getCarsOrBuilderList() {
      return cars_;
    }
    /**
     * <code>repeated .com.hjc.herol.proto.test.RichMan.Car cars = 5;</code>
     */
    public int getCarsCount() {
      return cars_.size();
    }
    /**
     * <code>repeated .com.hjc.herol.proto.test.RichMan.Car cars = 5;</code>
     */
    public com.hjc.herol.proto.test.RichManPb.RichMan.Car getCars(int index) {
      return cars_.get(index);
    }
    /**
     * <code>repeated .com.hjc.herol.proto.test.RichMan.Car cars = 5;</code>
     */
    public com.hjc.herol.proto.test.RichManPb.RichMan.CarOrBuilder getCarsOrBuilder(
        int index) {
      return cars_.get(index);
    }
    private void ensureCarsIsMutable() {
      if (!cars_.isModifiable()) {
        cars_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(cars_);
       }
    }

    /**
     * <code>repeated .com.hjc.herol.proto.test.RichMan.Car cars = 5;</code>
     */
    private void setCars(
        int index, com.hjc.herol.proto.test.RichManPb.RichMan.Car value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureCarsIsMutable();
      cars_.set(index, value);
    }
    /**
     * <code>repeated .com.hjc.herol.proto.test.RichMan.Car cars = 5;</code>
     */
    private void setCars(
        int index, com.hjc.herol.proto.test.RichManPb.RichMan.Car.Builder builderForValue) {
      ensureCarsIsMutable();
      cars_.set(index, builderForValue.build());
    }
    /**
     * <code>repeated .com.hjc.herol.proto.test.RichMan.Car cars = 5;</code>
     */
    private void addCars(com.hjc.herol.proto.test.RichManPb.RichMan.Car value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureCarsIsMutable();
      cars_.add(value);
    }
    /**
     * <code>repeated .com.hjc.herol.proto.test.RichMan.Car cars = 5;</code>
     */
    private void addCars(
        int index, com.hjc.herol.proto.test.RichManPb.RichMan.Car value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureCarsIsMutable();
      cars_.add(index, value);
    }
    /**
     * <code>repeated .com.hjc.herol.proto.test.RichMan.Car cars = 5;</code>
     */
    private void addCars(
        com.hjc.herol.proto.test.RichManPb.RichMan.Car.Builder builderForValue) {
      ensureCarsIsMutable();
      cars_.add(builderForValue.build());
    }
    /**
     * <code>repeated .com.hjc.herol.proto.test.RichMan.Car cars = 5;</code>
     */
    private void addCars(
        int index, com.hjc.herol.proto.test.RichManPb.RichMan.Car.Builder builderForValue) {
      ensureCarsIsMutable();
      cars_.add(index, builderForValue.build());
    }
    /**
     * <code>repeated .com.hjc.herol.proto.test.RichMan.Car cars = 5;</code>
     */
    private void addAllCars(
        java.lang.Iterable<? extends com.hjc.herol.proto.test.RichManPb.RichMan.Car> values) {
      ensureCarsIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, cars_);
    }
    /**
     * <code>repeated .com.hjc.herol.proto.test.RichMan.Car cars = 5;</code>
     */
    private void clearCars() {
      cars_ = emptyProtobufList();
    }
    /**
     * <code>repeated .com.hjc.herol.proto.test.RichMan.Car cars = 5;</code>
     */
    private void removeCars(int index) {
      ensureCarsIsMutable();
      cars_.remove(index);
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (cmd_ != 0) {
        output.writeInt32(1, cmd_);
      }
      if (id_ != 0) {
        output.writeInt32(2, id_);
      }
      if (!name_.isEmpty()) {
        output.writeString(3, getName());
      }
      if (!email_.isEmpty()) {
        output.writeString(4, getEmail());
      }
      for (int i = 0; i < cars_.size(); i++) {
        output.writeMessage(5, cars_.get(i));
      }
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (cmd_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, cmd_);
      }
      if (id_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, id_);
      }
      if (!name_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(3, getName());
      }
      if (!email_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(4, getEmail());
      }
      for (int i = 0; i < cars_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, cars_.get(i));
      }
      memoizedSerializedSize = size;
      return size;
    }

    public static com.hjc.herol.proto.test.RichManPb.RichMan parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.hjc.herol.proto.test.RichManPb.RichMan parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.hjc.herol.proto.test.RichManPb.RichMan parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.hjc.herol.proto.test.RichManPb.RichMan parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.hjc.herol.proto.test.RichManPb.RichMan parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.hjc.herol.proto.test.RichManPb.RichMan parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.hjc.herol.proto.test.RichManPb.RichMan parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.hjc.herol.proto.test.RichManPb.RichMan parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.hjc.herol.proto.test.RichManPb.RichMan parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.hjc.herol.proto.test.RichManPb.RichMan parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.hjc.herol.proto.test.RichManPb.RichMan prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code com.hjc.herol.proto.test.RichMan}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.hjc.herol.proto.test.RichManPb.RichMan, Builder> implements
        // @@protoc_insertion_point(builder_implements:com.hjc.herol.proto.test.RichMan)
        com.hjc.herol.proto.test.RichManPb.RichManOrBuilder {
      // Construct using com.hjc.herol.proto.test.RichManPb.RichMan.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>optional int32 cmd = 1;</code>
       */
      public int getCmd() {
        return instance.getCmd();
      }
      /**
       * <code>optional int32 cmd = 1;</code>
       */
      public Builder setCmd(int value) {
        copyOnWrite();
        instance.setCmd(value);
        return this;
      }
      /**
       * <code>optional int32 cmd = 1;</code>
       */
      public Builder clearCmd() {
        copyOnWrite();
        instance.clearCmd();
        return this;
      }

      /**
       * <code>optional int32 id = 2;</code>
       */
      public int getId() {
        return instance.getId();
      }
      /**
       * <code>optional int32 id = 2;</code>
       */
      public Builder setId(int value) {
        copyOnWrite();
        instance.setId(value);
        return this;
      }
      /**
       * <code>optional int32 id = 2;</code>
       */
      public Builder clearId() {
        copyOnWrite();
        instance.clearId();
        return this;
      }

      /**
       * <code>optional string name = 3;</code>
       */
      public java.lang.String getName() {
        return instance.getName();
      }
      /**
       * <code>optional string name = 3;</code>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        return instance.getNameBytes();
      }
      /**
       * <code>optional string name = 3;</code>
       */
      public Builder setName(
          java.lang.String value) {
        copyOnWrite();
        instance.setName(value);
        return this;
      }
      /**
       * <code>optional string name = 3;</code>
       */
      public Builder clearName() {
        copyOnWrite();
        instance.clearName();
        return this;
      }
      /**
       * <code>optional string name = 3;</code>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setNameBytes(value);
        return this;
      }

      /**
       * <code>optional string email = 4;</code>
       */
      public java.lang.String getEmail() {
        return instance.getEmail();
      }
      /**
       * <code>optional string email = 4;</code>
       */
      public com.google.protobuf.ByteString
          getEmailBytes() {
        return instance.getEmailBytes();
      }
      /**
       * <code>optional string email = 4;</code>
       */
      public Builder setEmail(
          java.lang.String value) {
        copyOnWrite();
        instance.setEmail(value);
        return this;
      }
      /**
       * <code>optional string email = 4;</code>
       */
      public Builder clearEmail() {
        copyOnWrite();
        instance.clearEmail();
        return this;
      }
      /**
       * <code>optional string email = 4;</code>
       */
      public Builder setEmailBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setEmailBytes(value);
        return this;
      }

      /**
       * <code>repeated .com.hjc.herol.proto.test.RichMan.Car cars = 5;</code>
       */
      public java.util.List<com.hjc.herol.proto.test.RichManPb.RichMan.Car> getCarsList() {
        return java.util.Collections.unmodifiableList(
            instance.getCarsList());
      }
      /**
       * <code>repeated .com.hjc.herol.proto.test.RichMan.Car cars = 5;</code>
       */
      public int getCarsCount() {
        return instance.getCarsCount();
      }/**
       * <code>repeated .com.hjc.herol.proto.test.RichMan.Car cars = 5;</code>
       */
      public com.hjc.herol.proto.test.RichManPb.RichMan.Car getCars(int index) {
        return instance.getCars(index);
      }
      /**
       * <code>repeated .com.hjc.herol.proto.test.RichMan.Car cars = 5;</code>
       */
      public Builder setCars(
          int index, com.hjc.herol.proto.test.RichManPb.RichMan.Car value) {
        copyOnWrite();
        instance.setCars(index, value);
        return this;
      }
      /**
       * <code>repeated .com.hjc.herol.proto.test.RichMan.Car cars = 5;</code>
       */
      public Builder setCars(
          int index, com.hjc.herol.proto.test.RichManPb.RichMan.Car.Builder builderForValue) {
        copyOnWrite();
        instance.setCars(index, builderForValue);
        return this;
      }
      /**
       * <code>repeated .com.hjc.herol.proto.test.RichMan.Car cars = 5;</code>
       */
      public Builder addCars(com.hjc.herol.proto.test.RichManPb.RichMan.Car value) {
        copyOnWrite();
        instance.addCars(value);
        return this;
      }
      /**
       * <code>repeated .com.hjc.herol.proto.test.RichMan.Car cars = 5;</code>
       */
      public Builder addCars(
          int index, com.hjc.herol.proto.test.RichManPb.RichMan.Car value) {
        copyOnWrite();
        instance.addCars(index, value);
        return this;
      }
      /**
       * <code>repeated .com.hjc.herol.proto.test.RichMan.Car cars = 5;</code>
       */
      public Builder addCars(
          com.hjc.herol.proto.test.RichManPb.RichMan.Car.Builder builderForValue) {
        copyOnWrite();
        instance.addCars(builderForValue);
        return this;
      }
      /**
       * <code>repeated .com.hjc.herol.proto.test.RichMan.Car cars = 5;</code>
       */
      public Builder addCars(
          int index, com.hjc.herol.proto.test.RichManPb.RichMan.Car.Builder builderForValue) {
        copyOnWrite();
        instance.addCars(index, builderForValue);
        return this;
      }
      /**
       * <code>repeated .com.hjc.herol.proto.test.RichMan.Car cars = 5;</code>
       */
      public Builder addAllCars(
          java.lang.Iterable<? extends com.hjc.herol.proto.test.RichManPb.RichMan.Car> values) {
        copyOnWrite();
        instance.addAllCars(values);
        return this;
      }
      /**
       * <code>repeated .com.hjc.herol.proto.test.RichMan.Car cars = 5;</code>
       */
      public Builder clearCars() {
        copyOnWrite();
        instance.clearCars();
        return this;
      }
      /**
       * <code>repeated .com.hjc.herol.proto.test.RichMan.Car cars = 5;</code>
       */
      public Builder removeCars(int index) {
        copyOnWrite();
        instance.removeCars(index);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.hjc.herol.proto.test.RichMan)
    }
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.hjc.herol.proto.test.RichManPb.RichMan();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          cars_.makeImmutable();
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.hjc.herol.proto.test.RichManPb.RichMan other = (com.hjc.herol.proto.test.RichManPb.RichMan) arg1;
          cmd_ = visitor.visitInt(cmd_ != 0, cmd_,
              other.cmd_ != 0, other.cmd_);
          id_ = visitor.visitInt(id_ != 0, id_,
              other.id_ != 0, other.id_);
          name_ = visitor.visitString(!name_.isEmpty(), name_,
              !other.name_.isEmpty(), other.name_);
          email_ = visitor.visitString(!email_.isEmpty(), email_,
              !other.email_.isEmpty(), other.email_);
          cars_= visitor.visitList(cars_, other.cars_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
                case 8: {

                  cmd_ = input.readInt32();
                  break;
                }
                case 16: {

                  id_ = input.readInt32();
                  break;
                }
                case 26: {
                  String s = input.readStringRequireUtf8();

                  name_ = s;
                  break;
                }
                case 34: {
                  String s = input.readStringRequireUtf8();

                  email_ = s;
                  break;
                }
                case 42: {
                  if (!cars_.isModifiable()) {
                    cars_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(cars_);
                  }
                  cars_.add(
                      input.readMessage(com.hjc.herol.proto.test.RichManPb.RichMan.Car.parser(), extensionRegistry));
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.hjc.herol.proto.test.RichManPb.RichMan.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:com.hjc.herol.proto.test.RichMan)
    private static final com.hjc.herol.proto.test.RichManPb.RichMan DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new RichMan();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.hjc.herol.proto.test.RichManPb.RichMan getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<RichMan> PARSER;

    public static com.google.protobuf.Parser<RichMan> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }


  static {
  }

  // @@protoc_insertion_point(outer_class_scope)
}
